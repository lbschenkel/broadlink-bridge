[commands]
# Commands are codes that can be referred to by name.
# If an incoming code matches a command name, the command code is
# sent to the device instead.
#
# A payload can be in Broadlink (base64) format:
philips/power-off = JgAaABweOR4bHhwdHB4dHRw6HhsdHR0dOTocAA0FAAAAAAAAAAAAAAAAAAA=
# Or it can be in Pronto hex format:
denon/power-on = 0000 006D 0000 0020 000A 001E 000A 0046 000A 001E 000A 001E 000A 001E 000A 0046 000A 001E 000A 001E 000A 0046 000A 0046 000A 0046 000A 0046 000A 001E 000A 001E 000A 001E 000A 0677 000A 001E 000A 0046 000A 001E 000A 001E 000A 001E 000A 001E 000A 0046 000A 0046 000A 001E 000A 001E 000A 001E 000A 001E 000A 0046 000A 0046 000A 0046 000A 0677
# Repeats are also supported by adding a N* prefix to any code.
# For example, the code below will be sent 5 times (4 repeats):
panasonic/power-on = 5 * 0000 0070 0000 0032 0080 0040 0010 0010 0010 0030 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0030 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0030 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0010 0030 0010 0030 0010 0030 0010 0030 0010 0030 0010 0010 0010 0010 0010 0010 0010 0030 0010 0030 0010 0030 0010 0030 0010 0030 0010 0010 0010 0030 0010 0ACD

[device_types]
# Most devices are supported by default through the python-broadlink
# module. When new device types are introduced which are not (yet)
# supported by the module, they can be configured here.
#
# The format is: <device type id> = <class>, <name>, <brand>
#
# <device type id>: the hexadecimal device type id (e.g. "0x6539")
# <class>: name of the python-broadlink implementation class (e.g "rm" or "rm4")
# <name>: can be chosen freely, e.g. "RM4 mini"
# <brand>: normally "Broadlink"
0x27D3 = rm,  RM mini 3, Broadlink
0x6539 = rm4, MR4C mini, Broadlink
0x6539 = rm4, RM4C mini, Broadlink
0x6508 = rm4, RM mini 3, Broadlink
0x6539 = rm4, RM4C mini, Broadlink
0x6364 = rm4, RM4S,      Broadlink
0x653C = rm4, RM4 pro,   Broadlink
0x653C = rm4, RM4 pro,   Broadlink

[devices]
# Known devices that will be exposed via the bridge.
# The key is the alias that the device can be addressed as.
# The value is the host (name or IP) of the Broadlink device.
myalias = host.example.org

[discovery]
# The bridge can also discover nearby devices (same subnet).
#
# Number of seconds in which to wait for devices to reply during discovery.
# A value of 0 disables auto-discovery.
timeout = 5

[http]
# The port that the REST service will use.
# 8780 is the default port. Use 0 to disable.
port = 8780

[lirc]
# The port that the LIRC service will use. 0 to disable.
# 8765 is the default port. Use 0 to disable.
port = 8765

[mqtt]
# The URL of the MQTT broker in the form:
# <protocol>://[<user>@<password>@]<host>[:<port>]
# where:
# - protocol: 'mqtt' or 'mqtts' (TLS)
# - user (optional)
# - password (optional)
# - host: hostname/IP address of the MQTT server
# - port (optional)
# When empty or missing, the MQTT client is disabled.
broker_url = mqtt://mqtt.example.org
# The prefix to use. Default is "broadlink"
topic_prefix = 'broadlink'
